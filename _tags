# OASIS_START
# DO NOT EDIT (digest: 16e70425ab18c00a465984a8729e02f2)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library imaplet_email
"lib/imaplet_email/imaplet_email.cmxs": use_imaplet_email
"lib/imaplet_email/bigstringable.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/bigstring_extended.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/boundary.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/core_replace.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/debug.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/email.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/email_regex.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/encoding.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/error_handling.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/field_name.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/grammar.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/grammar_types.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/header.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/lazys.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/lexable.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/lexer.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/lexer_state.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/mailbox.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/media_type.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/mimestring.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/octet_stream.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/parser_intf.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/rfc.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/stringable_.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/string_monoidable.cmx": for-pack(Imaplet_email)
"lib/imaplet_email/string_monoid.cmx": for-pack(Imaplet_email)
<lib/imaplet_email/*.ml{,i,y}>: pkg_fieldslib.syntax
<lib/imaplet_email/*.ml{,i,y}>: pkg_re2
<lib/imaplet_email/*.ml{,i,y}>: pkg_sexplib.syntax
<lib/imaplet_email/*.ml{,i,y}>: pkg_str
<lib/imaplet_email/*.ml{,i,y}>: pkg_threads
# Library imaplet_server
"lib/imaplet_server/imaplet_server.cmxs": use_imaplet_server
"lib/imaplet_server/account.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/amailbox.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/configuration.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/connections.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/context.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/dates.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/email_parse.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/fetchregex.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/imap_cmd.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/imap_crypto.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/imaplet_types.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/storage/irmin_core.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/storage/irmin_storage.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/install.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/interpreter.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/lazy_message.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/storage/mailbox_storage.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/storage/maildir_storage.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/regex.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/response.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/seq_iterator.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/server.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/server_config.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/ssl_.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/storage/storage.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/storage/storage_meta.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/utils.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/lex.cmx": for-pack(Imaplet_server)
"lib/imaplet_server/parser.cmx": for-pack(Imaplet_server)
<lib/imaplet_server/*.ml{,i,y}>: pkg_cstruct.unix
<lib/imaplet_server/*.ml{,i,y}>: pkg_fieldslib.syntax
<lib/imaplet_server/*.ml{,i,y}>: pkg_irmin.unix
<lib/imaplet_server/*.ml{,i,y}>: pkg_lwt
<lib/imaplet_server/*.ml{,i,y}>: pkg_lwt.syntax
<lib/imaplet_server/*.ml{,i,y}>: pkg_lwt.unix
<lib/imaplet_server/*.ml{,i,y}>: pkg_nocrypto
<lib/imaplet_server/*.ml{,i,y}>: pkg_re2
<lib/imaplet_server/*.ml{,i,y}>: pkg_sexplib.syntax
<lib/imaplet_server/*.ml{,i,y}>: pkg_str
<lib/imaplet_server/*.ml{,i,y}>: pkg_threads
<lib/imaplet_server/*.ml{,i,y}>: pkg_tls.lwt
<lib/imaplet_server/*.ml{,i,y}>: use_imaplet_email
<lib/imaplet_server/storage/*.ml{,i,y}>: pkg_cstruct.unix
<lib/imaplet_server/storage/*.ml{,i,y}>: pkg_fieldslib.syntax
<lib/imaplet_server/storage/*.ml{,i,y}>: pkg_irmin.unix
<lib/imaplet_server/storage/*.ml{,i,y}>: pkg_lwt
<lib/imaplet_server/storage/*.ml{,i,y}>: pkg_lwt.syntax
<lib/imaplet_server/storage/*.ml{,i,y}>: pkg_lwt.unix
<lib/imaplet_server/storage/*.ml{,i,y}>: pkg_nocrypto
<lib/imaplet_server/storage/*.ml{,i,y}>: pkg_re2
<lib/imaplet_server/storage/*.ml{,i,y}>: pkg_sexplib.syntax
<lib/imaplet_server/storage/*.ml{,i,y}>: pkg_str
<lib/imaplet_server/storage/*.ml{,i,y}>: pkg_threads
<lib/imaplet_server/storage/*.ml{,i,y}>: pkg_tls.lwt
<lib/imaplet_server/storage/*.ml{,i,y}>: use_imaplet_email
# Executable parse_restore
"test/parse_restore.native": pkg_cstruct.unix
"test/parse_restore.native": pkg_fieldslib.syntax
"test/parse_restore.native": pkg_irmin.unix
"test/parse_restore.native": pkg_lwt
"test/parse_restore.native": pkg_lwt.syntax
"test/parse_restore.native": pkg_lwt.unix
"test/parse_restore.native": pkg_nocrypto
"test/parse_restore.native": pkg_re2
"test/parse_restore.native": pkg_sexplib.syntax
"test/parse_restore.native": pkg_str
"test/parse_restore.native": pkg_threads
"test/parse_restore.native": pkg_tls.lwt
"test/parse_restore.native": use_imaplet_email
"test/parse_restore.native": use_imaplet_server
<test/*.ml{,i,y}>: pkg_cstruct.unix
<test/*.ml{,i,y}>: pkg_fieldslib.syntax
<test/*.ml{,i,y}>: pkg_irmin.unix
<test/*.ml{,i,y}>: pkg_lwt
<test/*.ml{,i,y}>: pkg_lwt.syntax
<test/*.ml{,i,y}>: pkg_lwt.unix
<test/*.ml{,i,y}>: pkg_nocrypto
<test/*.ml{,i,y}>: pkg_re2
<test/*.ml{,i,y}>: pkg_sexplib.syntax
<test/*.ml{,i,y}>: pkg_str
<test/*.ml{,i,y}>: pkg_threads
<test/*.ml{,i,y}>: pkg_tls.lwt
<test/*.ml{,i,y}>: use_imaplet_email
<test/*.ml{,i,y}>: use_imaplet_server
# Executable imaplet
"servers/imaplet.native": pkg_cstruct.unix
"servers/imaplet.native": pkg_fieldslib.syntax
"servers/imaplet.native": pkg_irmin.unix
"servers/imaplet.native": pkg_lwt
"servers/imaplet.native": pkg_lwt.syntax
"servers/imaplet.native": pkg_lwt.unix
"servers/imaplet.native": pkg_nocrypto
"servers/imaplet.native": pkg_re2
"servers/imaplet.native": pkg_sexplib.syntax
"servers/imaplet.native": pkg_str
"servers/imaplet.native": pkg_threads
"servers/imaplet.native": pkg_tls.lwt
"servers/imaplet.native": use_imaplet_email
"servers/imaplet.native": use_imaplet_server
# Executable imaplet_lmtp
"servers/imaplet_lmtp.native": pkg_cstruct.unix
"servers/imaplet_lmtp.native": pkg_fieldslib.syntax
"servers/imaplet_lmtp.native": pkg_irmin.unix
"servers/imaplet_lmtp.native": pkg_lwt
"servers/imaplet_lmtp.native": pkg_lwt.syntax
"servers/imaplet_lmtp.native": pkg_lwt.unix
"servers/imaplet_lmtp.native": pkg_nocrypto
"servers/imaplet_lmtp.native": pkg_re2
"servers/imaplet_lmtp.native": pkg_sexplib.syntax
"servers/imaplet_lmtp.native": pkg_str
"servers/imaplet_lmtp.native": pkg_threads
"servers/imaplet_lmtp.native": pkg_tls.lwt
"servers/imaplet_lmtp.native": use_imaplet_email
"servers/imaplet_lmtp.native": use_imaplet_server
# Executable imaplet_irmin_read
"servers/imaplet_irmin_read.native": pkg_cstruct.unix
"servers/imaplet_irmin_read.native": pkg_fieldslib.syntax
"servers/imaplet_irmin_read.native": pkg_irmin.unix
"servers/imaplet_irmin_read.native": pkg_lwt
"servers/imaplet_irmin_read.native": pkg_lwt.syntax
"servers/imaplet_irmin_read.native": pkg_lwt.unix
"servers/imaplet_irmin_read.native": pkg_nocrypto
"servers/imaplet_irmin_read.native": pkg_re2
"servers/imaplet_irmin_read.native": pkg_sexplib.syntax
"servers/imaplet_irmin_read.native": pkg_str
"servers/imaplet_irmin_read.native": pkg_threads
"servers/imaplet_irmin_read.native": pkg_tls.lwt
"servers/imaplet_irmin_read.native": use_imaplet_email
"servers/imaplet_irmin_read.native": use_imaplet_server
# Executable imaplet_irmin_build
"servers/imaplet_irmin_build.native": pkg_cstruct.unix
"servers/imaplet_irmin_build.native": pkg_fieldslib.syntax
"servers/imaplet_irmin_build.native": pkg_irmin.unix
"servers/imaplet_irmin_build.native": pkg_lwt
"servers/imaplet_irmin_build.native": pkg_lwt.syntax
"servers/imaplet_irmin_build.native": pkg_lwt.unix
"servers/imaplet_irmin_build.native": pkg_nocrypto
"servers/imaplet_irmin_build.native": pkg_re2
"servers/imaplet_irmin_build.native": pkg_sexplib.syntax
"servers/imaplet_irmin_build.native": pkg_str
"servers/imaplet_irmin_build.native": pkg_threads
"servers/imaplet_irmin_build.native": pkg_tls.lwt
"servers/imaplet_irmin_build.native": use_imaplet_email
"servers/imaplet_irmin_build.native": use_imaplet_server
# Executable imaplet_maildir_index
"servers/imaplet_maildir_index.native": pkg_cstruct.unix
"servers/imaplet_maildir_index.native": pkg_fieldslib.syntax
"servers/imaplet_maildir_index.native": pkg_irmin.unix
"servers/imaplet_maildir_index.native": pkg_lwt
"servers/imaplet_maildir_index.native": pkg_lwt.syntax
"servers/imaplet_maildir_index.native": pkg_lwt.unix
"servers/imaplet_maildir_index.native": pkg_nocrypto
"servers/imaplet_maildir_index.native": pkg_re2
"servers/imaplet_maildir_index.native": pkg_sexplib.syntax
"servers/imaplet_maildir_index.native": pkg_str
"servers/imaplet_maildir_index.native": pkg_threads
"servers/imaplet_maildir_index.native": pkg_tls.lwt
"servers/imaplet_maildir_index.native": pkg_zip
"servers/imaplet_maildir_index.native": use_imaplet_email
"servers/imaplet_maildir_index.native": use_imaplet_server
<servers/*.ml{,i,y}>: pkg_cstruct.unix
<servers/*.ml{,i,y}>: pkg_fieldslib.syntax
<servers/*.ml{,i,y}>: pkg_irmin.unix
<servers/*.ml{,i,y}>: pkg_lwt
<servers/*.ml{,i,y}>: pkg_lwt.syntax
<servers/*.ml{,i,y}>: pkg_lwt.unix
<servers/*.ml{,i,y}>: pkg_nocrypto
<servers/*.ml{,i,y}>: pkg_re2
<servers/*.ml{,i,y}>: pkg_sexplib.syntax
<servers/*.ml{,i,y}>: pkg_str
<servers/*.ml{,i,y}>: pkg_threads
<servers/*.ml{,i,y}>: pkg_tls.lwt
<servers/*.ml{,i,y}>: pkg_zip
<servers/*.ml{,i,y}>: use_imaplet_email
<servers/*.ml{,i,y}>: use_imaplet_server
# OASIS_STOP
true: use_menhir
<storage/*.ml{,i}>: pkg_cstruct.unix
<storage/*.ml{,i}>: pkg_lwt
<storage/*.ml{,i}>: pkg_lwt.syntax
<storage/*.ml{,i}>: pkg_lwt.unix
<storage/*.ml{,i}>: pkg_sexplib
<storage/*.ml{,i}>: pkg_sexplib.syntax
<storage/*.ml{,i}>: pkg_str
<storage/*.ml{,i}>: pkg_threads
<storage/*.ml{,i}>: pkg_tls.lwt
<storage/*.ml{,i}>: pkg_irmin.unix
<storage/*.ml{,i}>: use_imaplet_email
