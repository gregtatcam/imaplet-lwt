# OASIS_START
# DO NOT EDIT (digest: 114e8fe1436aad29cffe4dab329ed899)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Executable imaplet
"imaplet.native": pkg_core
"imaplet.native": pkg_cstruct.unix
"imaplet.native": pkg_email_message
"imaplet.native": pkg_irmin.backend
"imaplet.native": pkg_irmin.unix
"imaplet.native": pkg_lwt
"imaplet.native": pkg_lwt.syntax
"imaplet.native": pkg_lwt.unix
"imaplet.native": pkg_nocrypto
"imaplet.native": pkg_sexplib
"imaplet.native": pkg_sexplib.syntax
"imaplet.native": pkg_str
"imaplet.native": pkg_threads
"imaplet.native": pkg_tls.lwt
<*.ml{,i}>: pkg_cstruct.unix
<*.ml{,i}>: pkg_nocrypto
<*.ml{,i}>: pkg_sexplib
<*.ml{,i}>: pkg_tls.lwt
# Executable imaplet_lmtp
"imaplet_lmtp.native": pkg_core
"imaplet_lmtp.native": pkg_lwt
"imaplet_lmtp.native": pkg_lwt.syntax
"imaplet_lmtp.native": pkg_lwt.unix
"imaplet_lmtp.native": pkg_str
"imaplet_lmtp.native": pkg_threads
<*.ml{,i}>: pkg_core
<*.ml{,i}>: pkg_lwt.syntax
# Executable imaplet_irmin_read
"imaplet_irmin_read.native": pkg_email_message
"imaplet_irmin_read.native": pkg_irmin.backend
"imaplet_irmin_read.native": pkg_irmin.unix
"imaplet_irmin_read.native": pkg_lwt
"imaplet_irmin_read.native": pkg_sexplib.syntax
"imaplet_irmin_read.native": pkg_str
"imaplet_irmin_read.native": pkg_threads
# Executable imaplet_irmin_build
"imaplet_irmin_build.native": pkg_email_message
"imaplet_irmin_build.native": pkg_irmin.backend
"imaplet_irmin_build.native": pkg_irmin.unix
"imaplet_irmin_build.native": pkg_lwt
"imaplet_irmin_build.native": pkg_lwt.unix
"imaplet_irmin_build.native": pkg_sexplib.syntax
"imaplet_irmin_build.native": pkg_str
"imaplet_irmin_build.native": pkg_threads
<*.ml{,i}>: pkg_email_message
<*.ml{,i}>: pkg_irmin.backend
<*.ml{,i}>: pkg_irmin.unix
<*.ml{,i}>: pkg_lwt
<*.ml{,i}>: pkg_lwt.unix
<*.ml{,i}>: pkg_sexplib.syntax
<*.ml{,i}>: pkg_str
<*.ml{,i}>: pkg_threads
# OASIS_STOP
<*.mly>: pkg_batteries
true: use_menhir
<storage/*.ml{,i}>: pkg_batteries
<storage/*.ml{,i}>: pkg_core
<storage/*.ml{,i}>: pkg_cstruct.unix
<storage/*.ml{,i}>: pkg_lwt
<storage/*.ml{,i}>: pkg_lwt.syntax
<storage/*.ml{,i}>: pkg_lwt.unix
<storage/*.ml{,i}>: pkg_sexplib
<storage/*.ml{,i}>: pkg_sexplib.syntax
<storage/*.ml{,i}>: pkg_str
<storage/*.ml{,i}>: pkg_threads
<storage/*.ml{,i}>: pkg_tls.lwt
<storage/*.ml{,i}>: pkg_irmin.backend
<storage/*.ml{,i}>: pkg_irmin.unix
<storage/*.ml{,i}>: pkg_email_message
